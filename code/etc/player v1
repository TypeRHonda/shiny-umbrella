// 플레이어 캐릭터의 능력치 및 보유 돈을 // 파일 입출력을 사용하여 저장, 삭제, 생성, 불러오기를 수행하는 헤더파일.#ifndef Character_Player_H // 헤더파일의 중복 선언을 막기위해 사용.(시작점)#define Character_Player_H#include<stdio.h>#include<string.h>#include<stdlib.h>typedef struct player { // 캐릭터를 구성하는데 필요한 능력치 및 돈의 변수를 선언 int level; char player_name[30]; int gold; int exp; int atk; int def; int full_hp; int now_hp;}PLAYER;void new_player() { // 캐릭터를 생성하는 함수. player user; FILE *f1; char choose;  f1 = fopen("user.txt", "w+"); char name[30]; printf("\n 생성할 캐릭터의 이름을 적어주세요 : "); scanf("%s", name);  fprintf(f1, "%d %s %d %d", 1, name, 0, 0); printf("\n 생성완료\n"); fclose(f1); return;}int load_player(player *user) { // 저장되어 있던 캐릭터를 불러오는 함수. FILE *f1; f1 = fopen("user.txt", "r"); int level; char player_name[30]; int gold; int exp; fscanf(f1, "%d %s %d %d", &level, player_name, &gold, &exp); strcpy(user->player_name, player_name); user->level = level; user->gold = gold; user->exp = exp; user->full_hp = 40 + user->level * 5; user->now_hp = user->full_hp; user->atk = user->level * 2 + 4; user->def = user->level * 1 + 5; printf(" 불러오기 완료.\n"); fclose(f1); return 0;}void save_player(player *user) { // 현재 캐릭터를 저장하는 함수. FILE *f1; f1 = fopen("user.txt", "w+"); fprintf(f1, "%d %s %d %d", user->level, user->player_name, user->gold, user->exp); printf("\n 저장 성공!\n"); int i; for (i = 0; i < 50000000; i++) {} // 0.5초 정도의 딜레이 fclose(f1); return;}#endif // 헤더파일의 중복 선언을 막기위해 사용(끝점)
