#include<stdio.h>

int main ()
{
	char name[10];
	char sex;
	int age;

	FILE*fp=fopen("C:\\파일입출력\\friend.txt","wt"); //출력스트림 friend 라는 파일명으로 txt 파일이 생성된다   // 9행
	int i;

	for(i=0;i<3;i++)
	{
		printf("이름 성별 나이 순 입력: ");
		scanf("%s %c %d",name,&sex,&age);                  //15행
		getchar(); // 버퍼에 남아있는 \n 의 소멸을 위해서  //16행
		fprintf(fp,"%s %c %d",name,sex,age);               // 17행
	}
	fclose(fp);
	return 0;
}



/* 
6행 : fprintf 함수는 printf 함수와 마찬가지로 문자열을 구성하여 출력하는 함수이다.
      따라서 텍스트 모드로 파일을 개방해야 한다.

16행 : scanf 함수는 엔터 키의 입력을 읽어 들이지 앟고 입력버퍼에 남겨둔다.
       따라서 입력버퍼에 남아있는 엔터 키의 소멸을 위해서 getchar 함수를 호출하였다.

17행 : 15행을 통해서 입력 받은 데이터로 문자열을 구성해서 fp가 지칭하는 파일에 출력하고 있다.
*/






------------------------------------------------------------------------------------------------



#include<stdio.h>

int main ()
{
	char name[10];
	char sex;
	int age;

	FILE * fp=fopen("C:\\파일입출력\\friend.txt","rt"); //입력 스트림 friend 란 이름의 txt 파일로 부터 입력 받는다  // 9행
	int ret;

	while(1) // 반복문 조건식이 1 이라서 무한루프
	{
		ret=fscanf(fp,"%s %c %d",name,&sex,&age);                                                       // 14행
		if(ret==EOF) //fscanf 함수는 파일끝에 도달하거나,오류가 발생시 EOF를 반환한다                  // 15행
			break; // 그래서 EOF 가 났을시 반복문을 탈출하는 조건을 만들어준다.                        // 16행
		printf("%s %c %d\n",name,sex,age);
	}
	fclose(fp); //fscanf 를 사용하는 경우에도 fclose 를 이용하여 닫아준다
	return 0;
}

/*
9행 : 데이터가 텍스트 모드로 저장된 파일이므로 텍스트 모드로 파일을 개방해야한다.

14행 : 데이터를 읽는 순서는데이터의 저장순서와 일치해야 한다. %s %c %d의 순으로 데이터를 
       저장했기 때문에 이 순서대로 데이터를 읽고 있다.

15,16행 : fscanf 함수가 EOF를 반환하면 while 문을 빠져 나오게 된다. 
          그런데 EOF는 파일의 끝에 도달하거나 오류가 발생할 때 반환된다.
		  이 예제에서는 이 두가지 상황을 구분하지 않고 있지만, 필요하다면 이전 예제와 유사하게
		  feof함수의 호출을 통해서 이 두가지 상황을 구분할수 있다.
		  */


feof함수 호출을 하는 경우는 반복문이 끝나고 나서 넣도록하자!