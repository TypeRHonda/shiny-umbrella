#ifndef Battle_System_H#define Battle_System_H#include<windows.h>#include"Character_Player.h"#include"Character_Monster.h"#include "map.h"player* user;void player_turn(player *user, monster *mob);void monster_turn(player *user, monster *mob);void battle_log(monster *mons) { // 서로 싸우는 과정 및 레벨업 과정 while (1) {  player_turn(user, mons);  if (mons->have_hp <= 0) {   printf(" %s는 쓰러졌다.\n", mons->monster_name);   printf(" %s는 경험치 %d를 획득했다.\n", user->player_name, mons->give_exp);   user->exp = user->exp + mons->give_exp;   int drop_gold = mons->level*(rand() % 7 + 3);   printf(" %s는 골드 %d를 획득했다.\n\n", user->player_name, drop_gold);   user->gold = user->gold + drop_gold;   if (user->exp >= 50) {    user->level= user->level+1;    user->exp = user->exp - 50;    printf(" %s는 레벨업을 하였다.\n\n", user->player_name);    user->full_hp = 40 + user->level * 5;    user->now_hp = user->full_hp;    user->atk = user->level * 2 + 4;    user->def = user->level * 1 + 5;   }   int i;   for (i = 0; i < 50000000; i++) {}   return;  }  monster_turn(user, mons);  if (user->now_hp <= 0) {   printf(" %s는 쓰러졌다.\n", user->player_name);   int i;   for (i = 0; i < 50000000; i++) {}   return;  } } system("cls");}void battle_menu(player *now_player) { // 결투를 할 것인지, 도주를 할 것인지 결정하는 함수. int choose_menu; user = (player*)malloc(sizeof(player)); monster *mob = (monster*)malloc(sizeof(monster)); user = now_player; while (1) {    system("cls");  create_monster(mob);  printf("\n %s 레벨 : %d HP : %d (이)가 나타났다!\n\n", mob->monster_name, mob->level, mob->full_hp);  printf("\n %s    Lv : %d    HP :  %d/%d      gold : %d   EXP :  %d\n\n", user->player_name,user->level, user->now_hp, user->full_hp, user->gold, user->exp);  printf(" 1. 싸우기\n 2. 도망가기\n");  printf("\n %s(은)는 어떻게 할 것인가? : ", user->player_name);  scanf("%d", &choose_menu);  switch (choose_menu) {  case 1:   system("cls");   battle_log(mob);   if (user->now_hp <= 0) {    user->now_hp = 1;   }   break;  case 2:   printf(" 도망쳤다!\n");   int i;   for (i = 0; i <= 50000000; i++) {}   return;   break;  default:   getchar();   break;  } }}void player_turn(player *user, monster *mob) { // 플레이어가 공격일 때 주는 피해를 계산하는 함수. int i,damage; damage = user->atk + mob->def; if (damage <= 0) {  damage = 0;  printf(" %s의 공격은 빗나갔다!\n\n", user->player_name);  for (i = 0; i <= 50000000; i++) {}  return; } mob->have_hp = mob->have_hp - damage; printf(" %s는 %d의 피해를 입었다.\n", mob->monster_name, damage); printf(" %s의 남은 체력 : %d\n\n", mob->monster_name, mob->have_hp); for (i = 0; i <= 50000000; i++) {} return;}void monster_turn(player *user, monster *mob) {// 플레이어가 수비일 때 입는 피해를 계산하는 함수. int i, damage; damage = mob->atk + user->def; if (damage <= 0) {  damage = 0;  printf(" %s의 공격은 빗나갔다!\n\n",mob->monster_name);  for (i = 0; i <= 50000000; i++) {}  return; } user->now_hp = user->now_hp - damage; printf(" %s는 %d의 피해를 입었다.\n", user->player_name, damage); printf(" %s의 남은 체력 : %d\n\n", user->player_name, user->now_hp); for (i = 0; i <= 50000000; i++) {} return;}#endif
