// 여관과 저장을 할 수 있는 마을, 사냥터로 갈 수 있는 맵이다.// 여관에서는 300glold를 지불하고 체력을 회복할 수 있다.// 마을에서는 키보드의 ↑키를 사용하여 저장할 수 있다.// 사냥터에서는 몬스터와 싸울 수 있다.#ifndef map_H //헤더파일의 중복 선언을 막기위해 사용.(시작점)#define map_H#include<stdio.h>#include<stdlib.h>#include<string.h>#include<conio.h>#include"Character_Player.h"#include"Battle_System.h"#include"client.h"#define left 75#define right 77#define up 72#define down 80#define esc 27player *now_player;void motel();void battlefield();void healing();void villige(player *user) { // 마을함수. 여관과 저장하기 및 사냥터의 분기가 되는 맵이다. now_player = (player*)malloc(sizeof(player)); now_player = user; while (1) {  system("cls");  fflush(stdin);  int move;  printf("\n %s    Lv : %d    HP :  %d/%d      gold : %d   EXP :  %d\n\n\n", now_player->player_name, now_player->level, now_player->now_hp, now_player->full_hp, now_player->gold, now_player->exp);  printf(" 현재위치 : 마을 \n\n");  printf(" ←. 여관으로 이동\n");  printf(" ↑. 저장하기\n");  printf(" →. 사냥터로 이동\n");  printf(" ESC. 종료하기\n");  printf("\n %s(은)는 어떻게 할 것인가?", now_player->player_name);  move = getch();  switch (move) {  case up:    // 2를 입력받으면 저장을 한다.   save_player(now_player);   break;  case left:  // 1를 입력받으면 여관으로 이동한다.   motel();   break;  case right: // 3를 입력받으면 사냥터로 이동한다.   battlefield();   break;  case esc:   system("cls");   getchar();   printf("\n 바로 종료하면 저장이 되지 않습니다.\n 저장하시겠습니까? (y입력시 종료) : ");   char end;   scanf("%c", &end);   switch (end) {   case 'y':    exit(0);    break;   case 'Y':    exit(0);    break;   default: break;   }  default:   break;  } } return;}void motel() { // 여관 함수. 체력을 회복할 수 있다. while (1) {  system("cls");  fflush(stdin);  int move;  printf("\n %s    Lv : %d    HP :  %d/%d      gold : %d   EXP :  %d\n\n\n", now_player->player_name, now_player->level, now_player->now_hp, now_player->full_hp, now_player->gold, now_player->exp);  printf(" 현재위치 : 여관 \n\n");  printf(" ↑. 회복하기 (50골드 필요)\n");  printf(" →. 마을로 이동\n");  printf("\n %s(은)는 어떻게 할 것인가?", now_player->player_name);  move = getch();  switch (move) {  case up: // 1 입력받으면 체력을 회복.   healing();   break;  case right: // 2를 입력받으면 마을로 되돌아간다.   villige(now_player);   break;  default:   break;  } } return;}void battlefield() { // 사냥터 함수. 몬스터와 싸울 것인지, 마을로 돌아갈 것인지 결정. while (1) {  system("cls");  fflush(stdin);  int move;  printf("\n %s    Lv : %d    HP :  %d/%d      gold : %d   EXP :  %d\n\n\n", now_player->player_name, now_player->level, now_player->now_hp, now_player->full_hp, now_player->gold, now_player->exp);  printf(" 현재위치 : 사냥터 \n\n");  printf(" ←. 마을로 이동\n");  printf(" ↑. 싸우기\n");  printf(" →. 대전\n");  printf("\n %s(은)는 어떻게 할 것인가? : ", now_player->player_name);  move = getch();  switch (move) {  case up:  // 2를 입력받으면 몬스터와 싸우게된다.   battle_menu(now_player);   break;  case left:// 1를 입력받으면 마을로 되돌아간다.   villige(now_player);   break;  case right:   client(user);   break;  } }}void healing() { // 체력을 회복하는 함수. if (now_player -> gold < 50) // 만약 플레이어가 50원이 없다면 출력한다. {  printf("\n 가지고 있는 돈이 부족합니다.(%d 더 필요)\n", 50 - now_player-> gold);  system("pause");  return; } now_player->now_hp = now_player->full_hp; now_player->gold = now_player->gold - 50; printf("\n %s는 회복되었다.", now_player->player_name); system("pause"); return;}#endif // 헤더파일의 중복 선언을 막기위해 사용.(끝점)
