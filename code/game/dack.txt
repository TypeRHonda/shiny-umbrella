#include<stdio.h>
#include<time.h>
#include<stdlib.h>
#include<windows.h>
#include<conio.h>
void red();//빨강색
void white();//흰색
void blue();//파랑색
void maping();
void mains();
void picture(int *, int *, int *, int *);
void gotoxy(int x,int y);
void result_Dack(int, int, int, int *, int *);
int  Map[23][36]={
		{0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0}};
int score=0;
int flag = 1;
void mains()
{
	int i, j, y=16,key=0;
	int ing[6][5] = {{2,1,1,1,3},
						{6,0,0,0,6},
						{6,0,0,0,6},
						{6,0,0,0,6},
						{6,0,0,0,6},
						{4,1,1,1,5}};
	system("cls");
	white();
	gotoxy(26, 5); printf("http://costnc.tistory.com/");
	gotoxy(21, 7); printf("━━━━━━━━━━━━━━━━━");
	gotoxy(23, 9); red(); printf("     포        카  ");
	gotoxy(23, 11); blue(); printf("                 G a m e");
	gotoxy(21, 13); white(); printf("━━━━━━━━━━━━━━━━━");


	for(i=0; i<=5; i++){
		gotoxy(27, 14+i);
		for(j=0; j<5; j++){
			if(ing[i][j] == 1)
				printf("━━━");
			else if(ing[i][j] == 2)
				printf("┏");
			else if(ing[i][j] == 3)
				printf("┓");
			else if(ing[i][j] == 4)
				printf("┗");
			else if(ing[i][j] == 5)
				printf("┛");
			else if(ing[i][j] == 6)
				printf("┃");
			else if(ing[i][j] == 0)
				printf("　　　");
		}
		printf("\n");
	}
		gotoxy(35, 16); printf("S t a r t");
		gotoxy(35, 17); printf(" E x i t");
		red(); gotoxy(30, y); printf("☞");
	while(1){
		//up 72 down 80 enter 13
		key = getch();
		if(key == 72 && flag == 0){
			gotoxy(31, y); printf("　");
			y--;
			gotoxy(31, y); printf("☞");
			flag = 1;
		}
		else if(key == 80 && flag == 1){
			gotoxy(31, y); printf("　");
			y++;
			gotoxy(31, y); printf("☞");
			flag = 0;
		}
		else if(key == 13)
			break;
	}

}
void maping()
{
	int i, j;
	white();
	for(i=0; i<23; i++)
	{
		for(j=0; j<36; j++)
		{
			if(Map[i][j] == 1)
				printf("▩");
			else
			printf("　");

		}
		printf("\n");
	}
	gotoxy(67, 3); white(); printf("*[Computer]*");
	gotoxy(67, 5); white(); printf("*[Y   o  u]*");
	gotoxy(67, 7); white(); printf("*[Sc o r e]*");
	gotoxy(67, 8); white(); printf("%8d", score);
	gotoxy(67, 9); white(); printf("*[Who win?]*");
}
void picture(int *num_rand, int *shape_rand, int *num_rand2, int *shape_rand2)
{
	int shape[5]={0,1,2,3,4};//spade,heart,cluber,diamonds
	int number[14]={0,1,2,3,4,5,6,7,8,9,10,11,12,13};
	int x=28,y=29;
	int i,j,k,v=1, hide=0;		//hide 0 숨김, 1 표시
	int get=3;
	int num=0,num1=0;
	for(k=0;k<2;k++)
	{
		if(k==0)
		{
			for(i=0;i<4;i++)
			{
				num=0;
				for(j=0;j<25;j++)
				{
					Sleep(10);
					gotoxy(x-num, 8);printf("┏━━━┓");
					gotoxy(x-num, 9);printf("┃?     ┃");
					gotoxy(x-num,10);printf("┃      ┃");
					gotoxy(x-num,11);printf("┃   ?  ┃");
					gotoxy(x-num,12);printf("┃      ┃");
					gotoxy(x-num,13);printf("┃     ?┃");
					gotoxy(x-num,14);printf("┗━━━┛");
					num+=1;
				}
				x+=2;
			}
			num=0;
			for(i=0;i<4;i++)
			{
				num=1;
				if(i%2==1)
				{
					num*=-1;
				}
				for(j=0;j<7;j++)
				{
					Sleep(20);
					if(i%2==0)
					{
						gotoxy(10-num1,15-num);printf("          ");
					}
					gotoxy(10-num1, 8-num);printf("┏━━━┓");
					gotoxy(10-num1, 9-num);printf("┃?     ┃");
					gotoxy(10-num1,10-num);printf("┃      ┃");
					gotoxy(10-num1,11-num);printf("┃   ?  ┃");
					gotoxy(10-num1,12-num);printf("┃      ┃");
					gotoxy(10-num1,13-num);printf("┃     ?┃");
					gotoxy(10-num1,14-num);printf("┗━━━┛");
					if(i%2==1)
					{
						gotoxy(10-num1, 7-num);printf("          ");
					}
					if(i%2==0)
						num+=1;
					else
						num-=1;
				}
				num1+=2;
			}
			system("cls");
			maping();
		}
		else
		{
			gotoxy(5, 8); printf("computer");		//컴퓨터와 사용자를 표시.
			gotoxy(5, 14); printf("Y  o  u");
			num=0;
			num1=0;
			j=1;
			for(i=0;i<10;i++)
			{
				if(i%2==0)
				{
					if(i>get)
					{
						get+=2;
						hide = 1;
						getch();
					}
					white();
					gotoxy(4+num, 1);printf("┏━━━┓");
					gotoxy(4+num, 2);printf("┃?     ┃");
					gotoxy(4+num, 3);printf("┃      ┃");
					gotoxy(4+num, 4);printf("┃   ?  ┃");
					gotoxy(4+num, 5);printf("┃      ┃");
					gotoxy(4+num, 6);printf("┃     ?┃");
					gotoxy(4+num, 7);printf("┗━━━┛");
//					if(hide != 1){
						if(shape[shape_rand[j]]==4){
							white();
							gotoxy(6+num, 2);printf("♠");
							gotoxy(10+num,6);printf("♠");}
						else if(shape[shape_rand[j]]==2){
							red();
							gotoxy(6+num, 2);printf("♥");
							gotoxy(10+num,6);printf("♥");}
						else if(shape[shape_rand[j]]==1){
							white();
							gotoxy(6+num, 2);printf("♣");
							gotoxy(10+num,6);printf("♣");}
						else if(shape[shape_rand[j]]==3){
							red();
							gotoxy(6+num, 2);printf("◆");
							gotoxy(10+num,6);printf("◆");}
						if(number[num_rand[j]]==1){
							gotoxy(9+num,4);printf("A");}
						else if(number[num_rand[j]]==11){
							gotoxy(9+num,4);printf("J");}
						else if(number[num_rand[j]]==12){
							gotoxy(9+num,4);printf("Q");}
						else if(number[num_rand[j]]==13){
							gotoxy(9+num,4);printf("K");}
						else if(number[num_rand[j]]==num_rand[j]){
							gotoxy(8+num,4);printf("%2d",num_rand[j]);}
//					}
					num+=12;
					j++;			//배열을 1칸씩 증가 시킨다.
				}
				else
				{
					if(i>get)
					{
						getch();
					}
					Sleep(300);
					white();
					gotoxy(4+num1,15);printf("┏━━━┓");
					gotoxy(4+num1,16);printf("┃      ┃");
					gotoxy(4+num1,17);printf("┃      ┃");
					gotoxy(4+num1,18);printf("┃      ┃");
					gotoxy(4+num1,19);printf("┃      ┃");
					gotoxy(4+num1,20);printf("┃      ┃");
					gotoxy(4+num1,21);printf("┗━━━┛");
					if(shape[shape_rand2[v]]==4){
						white();
						gotoxy(6+num1, 16);printf("♠");
						gotoxy(10+num1,20);printf("♠");}
					else if(shape[shape_rand2[v]]==2){
						red();
						gotoxy(6+num1, 16);printf("♥");
						gotoxy(10+num1,20);printf("♥");}
					else if(shape[shape_rand2[v]]==1){
						white();
						gotoxy(6+num1, 16);printf("♣");
						gotoxy(10+num1,20);printf("♣");}
					else if(shape[shape_rand2[v]]==3){
						red();
						gotoxy(6+num1, 16);printf("◆");
						gotoxy(10+num1,20);printf("◆");}
					if(number[num_rand2[v]]==1){
						gotoxy(9+num1,18);printf("A");}
					else if(number[num_rand2[v]]==11){
						gotoxy(9+num1,18);printf("J");}
					else if(number[num_rand2[v]]==12){
						gotoxy(9+num1,18);printf("Q");}
					else if(number[num_rand2[v]]==13){
						gotoxy(9+num1,18);printf("K");}
					else if(number[num_rand2[v]]==num_rand2[v]){
						gotoxy(8+num1,18);printf("%2d",num_rand2[v]);}
					num1+=12;
					v++; //배열을 한칸씩 증가시킨다.
				}
			}
		}
	}
}
void result_Dack(int size, int count, int re, int *number, int *pattern)
{
	int i, jump=0;			//jump = 카드값 위치 바꾸기

	if(count == 0){
		for(i = 1; i <= size; i++){
			white();
			gotoxy(14+jump,4);printf("┏━━━┓");
			gotoxy(14+jump,5);printf("┃      ┃");
			gotoxy(14+jump,6);printf("┃      ┃");
			gotoxy(14+jump,7);printf("┃      ┃");
			gotoxy(14+jump,8);printf("┃      ┃");
			gotoxy(14+jump,9);printf("┃      ┃");
			gotoxy(14+jump,10);printf("┗━━━┛");
			if(pattern[i-re]==4){
				white();
				gotoxy(16+jump, 5);printf("♠");
				gotoxy(20+jump, 9);printf("♠");}
			else if(pattern[i-re]==2){
				red();
				gotoxy(16+jump, 5);printf("♥");
				gotoxy(20+jump, 9);printf("♥");}
			else if(pattern[i-re]==1){
				white();
				gotoxy(16+jump, 5);printf("♣");
				gotoxy(20+jump, 9);printf("♣");}
			else if(pattern[i-re]==3){
				red();
				gotoxy(16+jump, 5);printf("◆");
				gotoxy(20+jump, 9);printf("◆");}
			if(number[i-re]==1){
				gotoxy(19+jump,7);printf("A");}
			else if(number[i-re]==11){
				gotoxy(19+jump,7);printf("J");}
			else if(number[i-re]==12){
				gotoxy(19+jump,7);printf("Q");}
			else if(number[i-re]==13){
				gotoxy(19+jump,7);printf("K");}
			else{
				gotoxy(18+jump,7);printf("%2d",number[i-re]);}
			jump+=10;
		}
	}
	if(count == 1)
	{
		for(i = 1; i <= size; i++){
		white();
		gotoxy(14+jump,12);printf("┏━━━┓");
		gotoxy(14+jump,13);printf("┃      ┃");
		gotoxy(14+jump,14);printf("┃      ┃");
		gotoxy(14+jump,15);printf("┃      ┃");
		gotoxy(14+jump,16);printf("┃      ┃");
		gotoxy(14+jump,17);printf("┃      ┃");
		gotoxy(14+jump,18);printf("┗━━━┛");
		if(pattern[i-re]==4){
			white();
			gotoxy(16+jump, 13);printf("♠");
			gotoxy(20+jump, 17);printf("♠");}
		else if(pattern[i-re]==2){
			red();
			gotoxy(16+jump, 13);printf("♥");
			gotoxy(20+jump, 17);printf("♥");}
		else if(pattern[i-re]==1){
			white();
			gotoxy(16+jump, 13);printf("♣");
			gotoxy(20+jump, 17);printf("♣");}
		else if(pattern[i-re]==3){
			red();
			gotoxy(16+jump, 13);printf("◆");
			gotoxy(20+jump, 17);printf("◆");}
		if(number[i-re]==1){
			gotoxy(19+jump,15);printf("A");}
		else if(number[i-re]==11){
			gotoxy(19+jump,15);printf("J");}
		else if(number[i-re]==12){
			gotoxy(19+jump,15);printf("Q");}
		else if(number[i-re]==13){
			gotoxy(19+jump,15);printf("K");}
		else{
			gotoxy(18+jump,15);printf("%2d",number[i-re]);}
		jump+=10;
		}
	}
	if (count==0)					//결과 값 위치 지정
		gotoxy(68, 4);
	else if(count==1)
		gotoxy(68, 6);
}
void red() 
{ 
SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), FOREGROUND_INTENSITY | FOREGROUND_RED); 
} 
void white() 
{ 
SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), FOREGROUND_INTENSITY | FOREGROUND_RED| FOREGROUND_GREEN| FOREGROUND_BLUE); 
}
void blue() 
{ 
SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE),FOREGROUND_INTENSITY | FOREGROUND_BLUE); 
} 
void gotoxy(int x,int y)
{
	COORD XY={x,y};
	HANDLE hHandle=GetStdHandle(STD_OUTPUT_HANDLE);
	SetConsoleCursorPosition(hHandle,XY);
}