/*Elevotor Script.*/var levitatorBlock = 213;var limiterBlock = 214;var elevatorUp = false;var elevatorDown = false;var counter = 0;
var theElevatorX = null;var theElevatorY = null;var theElevatorZ = null;
var fromHereX = null;var fromHereY = null;var fromHereZ = null;
var elevatorSpeed = 10;
var buttonWindow = null;var buttonVisible = false;
Block.defineBlock(levitatorBlock, "Elevator", [["glowing_obsidian", 0],["stonecutter", 2],["glowing_obsidian", 0],["glowing_obsidian", 0],["glowing_obsidian", 0],["glowing_obsidian", 0]], 20 , 0, 0);Block.setColor(levitatorBlock,[0xACACAC]);Block.setDestroyTime(levitatorBlock,0.6);
Item.addShapedRecipe(levitatorBlock, 1, 0, ["   ","iii","rgr"], ["i", 265, 0, "r", 331, 0, "g", 266, 0]);
Item.setCategory(levitatorBlock,8);
Block.defineBlock(limiterBlock, "Elevator Limiter", [["stonebrick", 3],["stonebrick", 3],["stonebrick", 0],["stonebrick", 0],["stonebrick", 0],["stonebrick", 0]], 20 , 0, 0);Block.setColor(limiterBlock,[0xACACAC]);Block.setDestroyTime(limiterBlock,0.6);
Item.addShapedRecipe(limiterBlock, 1, 0, ["sss","srs","sss"], ["s", 1, 0, "r", 331, 0]);
Item.setCategory(limiterBlock,8);
Player.addItemCreativeInv(limiterBlock, 1);Player.addItemCreativeInv(levitatorBlock, 1);
function newLevel() {    clientMessage(ChatColor.GRAY + "Elevator Script: /el_help (for help)");    clientMessage("");}
function modTick() {      if (getTile(Player.getX(), Player.getY() - 2, Player.getZ()) == levitatorBlock && !(buttonVisible) && (getTile(Player.getX() - 1, Player.getY() - 2, Player.getZ()) == limiterBlock || getTile(Player.getX() + 1, Player.getY() - 2, Player.getZ()) == limiterBlock || getTile(Player.getX(), Player.getY() - 2, Player.getZ() - 1) == limiterBlock || getTile(Player.getX(), Player.getY() - 2, Player.getZ() + 1) == limiterBlock)) {      buttonVisible = true;      var activity = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();      activity.runOnUiThread(new java.lang.Runnable({ run: function() {
        try {          buttonWindow = new android.widget.PopupWindow();          var layout = new android.widget.LinearLayout(activity);          layout.setOrientation(android.widget.LinearLayout.VERTICAL);                    var buttonUp = new android.widget.Button(activity);          buttonUp.setText("UP");                    var buttonDown = new android.widget.Button(activity);          buttonDown.setText("DOWN");                    if (getTile(Player.getX(), Player.getY() + 1, Player.getZ()) == limiterBlock || getTile(Player.getX(), Player.getY() + 1, Player.getZ() - 2) == limiterBlock) {            buttonUp.setEnabled(false);          }          if (getTile(Player.getX(), Player.getY() - 3, Player.getZ()) == limiterBlock || getTile(Player.getX(), Player.getY() - 3, Player.getZ() - 2) == limiterBlock) {            buttonDown.setEnabled(false);          }            buttonUp.setOnClickListener(new android.view.View.OnClickListener({            onClick: function(viewarg) {        fromHereX = Player.getX();	      fromHereY = Player.getY() - 2;	      fromHereZ = Player.getZ();              elevatorUp = true;	      counter = 0;            }          }));                    buttonDown.setOnClickListener(new android.view.View.OnClickListener({            onClick: function(viewarg) {	      fromHereX = Player.getX();	      fromHereY = Player.getY() - 2;	      fromHereZ = Player.getZ();              elevatorDown = true;              counter = 0;            }          }));            layout.addView(buttonUp);          layout.addView(buttonDown);                    buttonWindow.setContentView(layout);          buttonWindow.setWidth(android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);          buttonWindow.setHeight(android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);          buttonWindow.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));          buttonWindow.showAtLocation(activity.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.CENTER, 0, 0);          } catch(e) {          print("err : " + problem);        }      }}));    }        if ((buttonVisible) && getTile(Player.getX(), Player.getY() - 2, Player.getZ()) != levitatorBlock) {      buttonVisible = false;      var activity = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();      activity.runOnUiThread(new java.lang.Runnable({ run: function() {            if(buttonWindow != null) {              buttonWindow.dismiss();              buttonwindow = null;            }      }}));    }        if (elevatorUp) {
	      buttonVisible = false;	      var activity = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();              activity.runOnUiThread(new java.lang.Runnable({ run: function() {                    if(buttonWindow !== null) {                      buttonWindow.dismiss();                      buttonwindow = null;                    }              }}));
        if (counter % elevatorSpeed === 0) {                    theElevatorX = Player.getX();          theElevatorY = Player.getY() - 2;          theElevatorZ = Player.getZ();
	   if (getTile(Player.getX(), Player.getY() + 4, Player.getZ()) == levitatorBlock) {		setTile(Player.getX(), Player.getY() + 4, Player.getZ(), 0, 0);	   }
            if (Level.getTile(Player.getX(), Player.getY() - 2, Player.getZ()) == levitatorBlock) {                setPosition(getPlayerEnt(), Player.getX(), Player.getY() + 1, Player.getZ());            }
            setTile(theElevatorX, theElevatorY + 1, theElevatorZ, levitatorBlock, 0);            setTile(theElevatorX, theElevatorY, theElevatorZ, 0, 0);                        // Level.addParticle(ParticleType.lava, theElevatorX - 1, theElevatorY, theElevatorZ, 0, 0, 0, 0);            // Level.addParticle(ParticleType.lava, theElevatorX + 1, theElevatorY, theElevatorZ, 0, 0, 0, 0);            // Level.addParticle(ParticleType.lava, theElevatorX, theElevatorY, theElevatorZ - 1, 0, 0, 0, 0);            // Level.addParticle(ParticleType.lava, theElevatorX, theElevatorY, theElevatorZ + 1, 0, 0, 0, 0);            Level.addParticle(ParticleType.lava, theElevatorX, theElevatorY, theElevatorZ, 0, 0, 0, 0);                                    theElevatorY++;                    }            if ((getTile(Player.getX() - 1, Player.getY() - 2, Player.getZ()) == limiterBlock || getTile(Player.getX() + 1, Player.getY() - 2, Player.getZ()) == limiterBlock || getTile(Player.getX(), Player.getY() - 2, Player.getZ() - 1) == limiterBlock || getTile(Player.getX(), Player.getY() - 2, Player.getZ() + 1) == limiterBlock)) {        elevatorUp = false;        setTile(fromHereX, fromHereY, fromHereZ, levitatorBlock, 0);    }    counter++;    }        if (elevatorDown) {
	buttonVisible = false;	var activity = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();	activity.runOnUiThread(new java.lang.Runnable({ run: function() {            if(buttonWindow !== null) {              buttonWindow.dismiss();              buttonwindow = null;            }	}}));
        if (counter % elevatorSpeed === 0) {
		theElevatorX = Player.getX();		theElevatorY = Player.getY() - 2;		theElevatorZ = Player.getZ();
            if (Level.getTile(Player.getX(), Player.getY() - 2, Player.getZ()) == levitatorBlock) {                setPosition(getPlayerEnt(), Player.getX(), Player.getY() - 1, Player.getZ());            }
            // Level.addParticle(ParticleType.lava, theElevatorX - 1, theElevatorY, theElevatorZ, 0, 0, 0, 0);            // Level.addParticle(ParticleType.lava, theElevatorX + 1, theElevatorY, theElevatorZ, 0, 0, 0, 0);            // Level.addParticle(ParticleType.lava, theElevatorX, theElevatorY, theElevatorZ - 1, 0, 0, 0, 0);            // Level.addParticle(ParticleType.lava, theElevatorX, theElevatorY, theElevatorZ + 1, 0, 0, 0, 0);            Level.addParticle(ParticleType.lava, theElevatorX, theElevatorY, theElevatorZ, 0, 0, 0, 0);                        setTile(theElevatorX, theElevatorY - 1, theElevatorZ, levitatorBlock, 0);            setTile(theElevatorX, theElevatorY, theElevatorZ, 0, 0);                        theElevatorY--;                    }            if (getTile(Player.getX() - 1, Player.getY() - 2, Player.getZ()) == limiterBlock || getTile(Player.getX() + 1, Player.getY() - 2, Player.getZ()) == limiterBlock || getTile(Player.getX(), Player.getY() - 2, Player.getZ() - 1) == limiterBlock || getTile(Player.getX(), Player.getY() - 2, Player.getZ() + 1) == limiterBlock) {        elevatorDown = false;        setTile(fromHereX, fromHereY, fromHereZ, levitatorBlock, 0);    }    counter++;    }    }
function leaveGame() {    activity = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();    activity.runOnUiThread(new java.lang.Runnable({ run: function() {        if(buttonWindow !== null) {            buttonWindow.dismiss();            buttonwindow = null;        }    }}));}
function procCmd(command) {        var cmd = command.split(" ");    var help = "el_help";    var give = "el_give";    var aboutMod = "el_about"    var setspeed = "el_speed";        if(cmd[0] == help) {
        clientMessage(ChatColor.GRAY + "Elevator Mod v1.2");        clientMessage(" ");        clientMessage(ChatColor.GRAY + "Elevator (ID: 213)");        clientMessage(ChatColor.GRAY + "Elevator Limiter (ID: 214)");        clientMessage(" ");        clientMessage(ChatColor.GRAY + "Type /el_give <id> <amount> ex: /el_give 213 3");        clientMessage(ChatColor.GRAY + "Type /el_speed <elevation_interval> ex: /el_speed 10");        clientMessage(ChatColor.GRAY + "The lesser the interval the faster the elevation.");        clientMessage(ChatColor.GRAY + "Type /el_about (More information about this mod.)");        clientMessage(" ");            } else if (cmd[0] == give) {
        var itemAmount = parseInt(cmd[2]);                switch(cmd[1]) {            case "213":                clientMessage(ChatColor.RED + "Received " + itemAmount + " elevator(s).");                clientMessage(" ");                Player.addItemInventory(213, itemAmount, 0); break;            case "214":                clientMessage(ChatColor.RED + "Received " + itemAmount + " elevator limiter(s).");                clientMessage(" ");                Player.addItemInventory(214, itemAmount, 0); break;            default:                clientMessage(ChatColor.DARK_BLUE + "Block not found.");                clientMessage(" ");                }    } else if (cmd[0] == aboutMod) {        clientMessage(ChatColor.GRAY + "Elevator (or Levitator?) Mod.");        clientMessage(ChatColor.GRAY + "Because everyone's too lazy to jump");        clientMessage(ChatColor.GRAY + "or use the stairs.");        clientMessage(ChatColor.GRAY + " ");        clientMessage(ChatColor.GRAY + "@RhanCandia");        clientMessage(ChatColor.GRAY + "google.com/+RhanelCandia");        clientMessage(ChatColor.GRAY + "fb.com/rhancandia");        clientMessage(ChatColor.GRAY + "youtube.com/rhancandia");        clientMessage(" ");    } else if (cmd[0] == setspeed) {                if (parseInt(cmd[1]) > 1) {            elevatorSpeed = parseInt(cmd[1]);            clientMessage(ChatColor.RED + "Elevetion interval set to " + elevatorSpeed);           } else {            clientMessage(ChatColor.RED + "Elevation interval can't be less than 1!");        }            }    }
