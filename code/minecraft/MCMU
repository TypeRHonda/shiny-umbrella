// ==UserScript==// @name         Curseforge Extractor// @namespace    MiniScripting// @version      0.3.1// @description  Extracts curseforge data for use in MCMU// @author       Minizbot2012// @match        http://*.curseforge.com/projects/*/files/*// @match        https://*.curseforge.com/projects/*/files/*// @grant        GM_getValue// @grant        GM_setValue// @grant        GM_deleteValue// @grant        GM_setClipboard// @grant        GM_notification// @grant        unsafeWindow// ==/UserScript==SidedStates = ["Both", "Server", "Client"];FNMode = ["Inside", "Outside"];function SettingsObj() {    this.prefix = "";}SettingsObj.prototype.get = function(name) {    if(GM_getValue(this.prefix+name)=== undefined) {        return undefined;    }    var obj = JSON.parse(GM_getValue(this.prefix+name));    return obj;};SettingsObj.prototype.set= function(name, obj) {    GM_setValue(this.prefix+name, JSON.stringify(obj));};SettingsObj.prototype.clear = function(name) {    GM_deleteValue(this.prefix+name);};var settings = new SettingsObj();settings.prefix = "CFE.";// Export API to Chrome ConsoleunsafeWindow.settings = settings;function clone(other) {    return JSON.parse(JSON.stringify(other));}var fileSettings;if(settings.get(getFNRaw()) === undefined) {    settings.set(getFNRaw(), {Sided:"Both", FileExt:null, FNMode:null});    fileSettings = settings.get(getFNRaw());} else {    fileSettings = settings.get(getFNRaw());}unsafeWindow.fileSettings = fileSettings;function updateJsonText(node, settings, fileData) {    var tmp = clone(fileData);    if(settings.Sided !== "Both") {        tmp.Side=settings.Sided;    }    if(settings.fileExt !== null) {        //NYI    }    tmp.FileName = undefined;    node.innerText = "\""+fileData.FileName +"\": " + JSON.stringify(tmp);}function getFNRaw() {    return document.getElementsByClassName("overflow-tip")[0].innerHTML;}function getFN() {    var FN = getFNRaw();    if(fileSettings.FNMode == "Inside") {        if(FN.indexOf("(") !==-1) {            var loc1 = FN.indexOf("(")+1;            var loc2 = FN.lastIndexOf(")");            FN = FN.substring(loc1, loc2);        }    }else{        FN = FN.replace(/ \([^)]*\)/," ");    }    FN = FN.replace(/[0-9\.]+\+/, " ");    FN = FN.replace(/&amp; /g, " ");    FN = FN.replace(/ Mod ?/gi, " ");    FN = FN.replace(/ ?The /gi, " ");    FN = FN.replace(/:/g," ");    FN = FN.replace(/'/g," ");    FN = FN.replace(/\|/g," ");    FN = FN.replace(/Library/g, " ");    FN = FN.replace(/Rendering/g," ");    FN = FN.replace(/ -.*/g, " ");    FN = FN.replace(/-/g," ");    FN = FN.replace(/ and /g, " ");    FN = FN.replace(/ /g, "");    return FN;}(function() {    'use strict';    var detailPanel  = document.getElementsByClassName("details-panel")[0];    var detailContent = detailPanel.getElementsByClassName("details-content")[0];    var dlLink = "https://minecraft.curseforge.com" + detailPanel.getElementsByClassName("fa-icon-download")[0].getAttribute("href");    console.log(dlLink);    var Hash = detailPanel.getElementsByClassName("md5")[0].innerHTML;    console.log(Hash);    var FileData ={URL:dlLink,Hash:Hash,FileName:getFN()};    var sidedList = document.createElement("form");    sidedList.id = "MCMU_Sided";    SidedStates.forEach(function(elem, ind, arr) {        var opt = document.createElement("input");        var lbl = document.createElement("label");        opt.name="Sided";        opt.type = "radio";        lbl.onclick =function() {            fileSettings.Sided = elem;            settings.set(getFNRaw(), fileSettings);            updateJsonText(node, fileSettings, FileData);        };        if(fileSettings.Sided == elem) {            opt.checked = true;        }        lbl.appendChild(opt);        lbl.appendChild(document.createTextNode(elem));        sidedList.appendChild(lbl);    });    var FNModeList = document.createElement("form");    var FNML = document.createTextNode("Use the name inside or outisde the (only if they're there) parenthesis");    FNModeList.appendChild(FNML);    FNMode.forEach(function(elem, ind, arr) {        var opt = document.createElement("input");        var lbl = document.createElement("label");        opt.name= "FNMode";        opt.type = "radio";        opt.id = "mini."+elem;        lbl.onclick =function() {            fileSettings.FNMode = elem;            FileData.FileName = getFN();            settings.set(getFNRaw(), fileSettings);            updateJsonText(node, fileSettings, FileData);        };        if(fileSettings.FNMode == elem) {            opt.checked = true;        }        lbl.appendChild(opt);        lbl.appendChild(document.createTextNode(elem));        FNModeList.appendChild(lbl);    });    var btn = document.createElement("button");    var text = document.createTextNode("Reset File Name Mode");    btn.appendChild(text);    btn.name = "Clear";    btn.style.height = "25px";    btn.style.width = "170px";    btn.onclick = function() {        fileSettings.FNMode = null;        FileData.FileName = getFN();        settings.set(getFNRaw(), fileSettings);        updateJsonText(node, fileSettings, FileData);        document.getElementById("mini.Inside").checked = false;        document.getElementById("mini.Outside").checked = false;        return false;    };    FNModeList.appendChild(btn);    var content = document.createElement("div");    content.appendChild(sidedList);    content.className = "details-versions";    content.appendChild(FNModeList);    var node = document.createElement("label");    updateJsonText(node, fileSettings, FileData);    node.onclick = function() {        GM_setClipboard(node.innerText);        GM_notification("Copied to clipboard");    };    content.appendChild(node);    var head = document.createElement("h4");    head.textContent = "CF Extractor";    content.prepend(head);    detailContent.appendChild(content);})();
