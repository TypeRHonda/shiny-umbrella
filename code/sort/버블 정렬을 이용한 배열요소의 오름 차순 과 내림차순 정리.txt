#include<stdio.h>

void B (int ary[] , int len);

int main (void)
{
	int arr[4]={3,2,4,1};
	int i;

	B(arr,sizeof(arr)/sizeof(int));
	printf("%d",sizeof(arr)/sizeof(int));
	for (i=0;i<4;i++)
		printf("%d ",arr[i]);

	printf("\n");
	return 0;
}

void B (int ary[], int len)
{
	int i,j;
	int temp;

	for(i=0;i<len-1;i++)//오름 차순 정렬//23
	{
		for(j=0;j<(len-i)-1;j++)//len - i -1 을 하는 이유 => ary[i] 와 ary[i+1] 을 비교 하기때문에 i=0 일때,
		{                       // j가 2까지 되기 때문에 arr[2]와 arr[3]의 비교까지 되는것이다.
			if(ary[j]>ary[j+1])
			{
				temp=ary[j];
				ary[j]=ary[j+1];
				ary[j+1]=temp;
			}
		}
	}//34
}

//23~34행 약 10 줄 정도가 버블 정렬 알고리즘의 실제 구현 부분이다.











함수 F 를 선언해서 (F 함수는 입력 받은 정수(배열의 요소들)을 내림차순으로 바꾸는 함수)내림차순으로 바꾸고
다시 printf함수를 이용해서 바뀌 배열 요소를 출력하는거다 !!!! 
배열 요소들의 순서를 바꾸었다고 바로 컴파일 하지말고
printf 함수를 써서 꼭 순서를 바꾸 배열 요소를 출력할것 !





#include<stdio.h> // 배열에 저장되어 있는 요소들을 내림차순으로 정렬하는 함수를 정의 길이가 7인 배열이고 사용자로부터 정수를 입력받자;

void F (int arr[],int len);

int main (void)
{
	int arr[7];
	int i;
	printf("정수 7개 입력\n");
	for(i=0;i<7;i++)
	{
		printf("입력:");
		scanf("%d",&arr[i]);
	}
	int len = sizeof(arr)/sizeof(int);
	F(arr,len);//내림 차순으로 배열 요소를 정렬한 함수 F 의 선언
	for(i=0;i<7;i++)
		printf("%d ",arr[i]);//함수 F 로 인해 배열 요소들이 내림 차순으로 바뀌었으니깐 다시 printf함수를 이용하여 배열들을 출력
	printf("\n");
	return 0;
}

void F (int arr[],int len)
{
	int i,j;
	int temp;

	for(i=0;i<len-1;i++)
	{
		for(j=0;j<len-i-1;j++)
		{
			if(arr[j]<arr[j+1])
			{
				temp=arr[j];
				arr[j]=arr[j+1];
				arr[j+1]=temp;
			}
		}
	}
}



함수 F 를 선언할때
len -1 을 하는 이유는 7개의 정수가 나왔지만 배열요소는 arr[6] 까지 있기 때문이다!(arr[0]~arr[6] 까지라서)
그리고 len-i-1을 하는 이유는 arr[j] 과 arr[j+1]을 비교하기 때문에 j 값에 5만들어가도 arr[5] 와 arr[6] 을 비교 할수 있기 때문이다
잊지말고 다음에도 써먹도록 하자 !!
